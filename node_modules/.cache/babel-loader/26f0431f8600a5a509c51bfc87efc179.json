{"ast":null,"code":"import * as loginConst from \"../constrants/loginConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\";\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginConst.POST_LOGIN:\n      {\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    case loginConst.POST_LOGIN_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        const username = data.username;\n        const password = data.password;\n        localStorage.setItem(\"hasLogined\", true);\n        localStorage.setItem(\"email\", username);\n        localStorage.setItem(\"password\", password);\n        myToast.toastSucces(\"Đăng nhập thành công\");\n        console.log(\"taikhoan\" + data);\n        return { ...state,\n          hasLogined: true,\n          email: data.email,\n          password: data.password\n        };\n      }\n\n    case loginConst.POST_LOGIN_FAILED:\n      {\n        myToast.toastError(\"Đăng nhập thất bại\");\n        localStorage.setItem(\"hasLogined\", false);\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/khanhle/Documents/GitHub/framework_IS220.M11_6/lavender/src/Components/redux/reducers/login.js"],"names":["loginConst","myToast","initialState","hasLogined","email","password","reducer","state","action","type","POST_LOGIN","POST_LOGIN_SUCCESS","data","payload","username","localStorage","setItem","toastSucces","console","log","POST_LOGIN_FAILED","toastError"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,oCAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAU,CAACU,UAAhB;AAA4B;AAC1B,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD,SAAKL,UAAU,CAACW,kBAAhB;AAAoC;AAClC,cAAM;AAAEC,UAAAA;AAAF,YAAWJ,MAAM,CAACK,OAAxB;AACA,cAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAtB;AACA,cAAMT,QAAQ,GAAIO,IAAI,CAACP,QAAvB;AACAU,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAD,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAA9B;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCX,QAAjC;AACAJ,QAAAA,OAAO,CAACgB,WAAR,CAAoB,sBAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAWP,IAAvB;AACA,eAAO,EACL,GAAGL,KADE;AAELJ,UAAAA,UAAU,EAAE,IAFP;AAGLC,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KAHP;AAILC,UAAAA,QAAQ,EAAEO,IAAI,CAACP;AAJV,SAAP;AAMD;;AACD,SAAKL,UAAU,CAACoB,iBAAhB;AAAmC;AACjCnB,QAAAA,OAAO,CAACoB,UAAR,CAAmB,oBAAnB;AACAN,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACA,eAAO,EAAE,GAAGT,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA8BA,eAAeD,OAAf","sourcesContent":["import * as loginConst from \"../constrants/loginConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\";\n\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\",\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginConst.POST_LOGIN: {\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    case loginConst.POST_LOGIN_SUCCESS: {\n      const { data } = action.payload;\n      const username=  data.username;\n      const password =  data.password;\n      localStorage.setItem(\"hasLogined\", true);\n      localStorage.setItem(\"email\", username);\n      localStorage.setItem(\"password\", password);\n      myToast.toastSucces(\"Đăng nhập thành công\");\n      console.log(\"taikhoan\"+data);\n      return {\n        ...state,\n        hasLogined: true,\n        email: data.email,\n        password: data.password,\n      };\n    }\n    case loginConst.POST_LOGIN_FAILED: {\n      myToast.toastError(\"Đăng nhập thất bại\");\n      localStorage.setItem(\"hasLogined\", false);\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}