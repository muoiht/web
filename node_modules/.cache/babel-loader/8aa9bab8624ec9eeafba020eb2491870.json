{"ast":null,"code":"import * as registerConst from \"../constrants/registerConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\";\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case registerConst.POST_REGISTER:\n      {\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    case registerConst.POST_REGISTER_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload.data;\n        localStorage.setItem(\"hasLogined\", true);\n        localStorage.setItem(\"email\", data.email);\n        localStorage.setItem(\"password\", data.password);\n        myToast.toastSucces(\"Đăng ký thành công\");\n        return { ...state,\n          hasLogined: true,\n          email: data.email,\n          password: data.password\n        };\n      }\n\n    case registerConst.POST_REGISTER_FAILED:\n      {\n        myToast.toastError(\"Đăng ký thất bại\");\n        localStorage.setItem(\"hasLogined\", false);\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/khanhle/Documents/GitHub/framework_IS220.M11_6/lavender/src/Components/redux/reducers/register.js"],"names":["registerConst","myToast","initialState","hasLogined","email","password","reducer","state","action","type","POST_REGISTER","POST_REGISTER_SUCCESS","data","payload","localStorage","setItem","toastSucces","POST_REGISTER_FAILED","toastError"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,6BAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,oCAAzB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAa,CAACU,aAAnB;AAAkC;AAChC,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD,SAAKL,aAAa,CAACW,qBAAnB;AAA0C;AAExC,cAAM;AAAEC,UAAAA;AAAF,YAAWJ,MAAM,CAACK,OAAP,CAAeD,IAAhC;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAD,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,IAAI,CAACR,KAAlC;AACAU,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCH,IAAI,CAACP,QAArC;AAEAJ,QAAAA,OAAO,CAACe,WAAR,CAAoB,oBAApB;AACM,eAAO,EACX,GAAGT,KADQ;AAEXJ,UAAAA,UAAU,EAAE,IAFD;AAGXC,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KAHD;AAIXC,UAAAA,QAAQ,EAAEO,IAAI,CAACP;AAJJ,SAAP;AAMP;;AACD,SAAKL,aAAa,CAACiB,oBAAnB;AAAyC;AACvChB,QAAAA,OAAO,CAACiB,UAAR,CAAmB,kBAAnB;AACEJ,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACF,eAAO,EAAE,GAAGR,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD;AACE,aAAOE,KAAP;AAzBJ;AA2BD,CA5BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import * as registerConst from \"../constrants/registerConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\"\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\",\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case registerConst.POST_REGISTER: {\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    case registerConst.POST_REGISTER_SUCCESS: {\n       \n      const { data } = action.payload.data;\n      localStorage.setItem(\"hasLogined\", true);\n      localStorage.setItem(\"email\",data.email);\n      localStorage.setItem(\"password\",data.password);\n    \n      myToast.toastSucces(\"Đăng ký thành công\");\n            return {\n        ...state,\n        hasLogined: true,\n        email: data.email,\n        password: data.password,\n      };\n    }\n    case registerConst.POST_REGISTER_FAILED: {\n      myToast.toastError(\"Đăng ký thất bại\");\n        localStorage.setItem(\"hasLogined\", false);\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}