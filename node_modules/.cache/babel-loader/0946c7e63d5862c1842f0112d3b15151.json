{"ast":null,"code":"import * as loginConst from \"../constrants/loginConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\";\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginConst.POST_LOGIN:\n      {\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    case loginConst.POST_LOGIN_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload.data;\n        const username = data.email.serializerSettings.taikhoankhachhangs.$values.username;\n        const password = data.email.serializerSettings.taikhoankhachhangs.$values.password;\n        localStorage.setItem(\"hasLogined\", true);\n        localStorage.setItem(\"email\", username);\n        localStorage.setItem(\"password\", password);\n        console.log(\"dưlieu\" + JSON.stringify(action.payload));\n        myToast.toastSucces(\"Đăng nhập thành công\");\n        return { ...state,\n          hasLogined: true,\n          email: email,\n          password: password\n        };\n      }\n\n    case loginConst.POST_LOGIN_FAILED:\n      {\n        myToast.toastError(\"Đăng nhập thất bại\");\n        localStorage.setItem(\"hasLogined\", false);\n        return { ...state,\n          hasLogined: false,\n          email: \"\",\n          password: \"\"\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/khanhle/Documents/GitHub/framework_IS220.M11_6/lavender/src/Components/redux/reducers/login.js"],"names":["loginConst","myToast","initialState","hasLogined","email","password","reducer","state","action","type","POST_LOGIN","POST_LOGIN_SUCCESS","data","payload","username","serializerSettings","taikhoankhachhangs","$values","localStorage","setItem","console","log","JSON","stringify","toastSucces","POST_LOGIN_FAILED","toastError"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,oCAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAU,CAACU,UAAhB;AAA4B;AAC1B,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD,SAAKL,UAAU,CAACW,kBAAhB;AAAoC;AAClC,cAAM;AAAEC,UAAAA;AAAF,YAAWJ,MAAM,CAACK,OAAP,CAAeD,IAAhC;AACA,cAAME,QAAQ,GAAGF,IAAI,CAACR,KAAL,CAAWW,kBAAX,CAA8BC,kBAA9B,CAAiDC,OAAjD,CAAyDH,QAA1E;AACA,cAAMT,QAAQ,GAAIO,IAAI,CAACR,KAAL,CAAWW,kBAAX,CAA8BC,kBAA9B,CAAiDC,OAAjD,CAAyDZ,QAA3E;AACAa,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAD,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,QAA9B;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCd,QAAjC;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAY,WAASC,IAAI,CAACC,SAAL,CAAef,MAAM,CAACK,OAAtB,CAArB;AACAZ,QAAAA,OAAO,CAACuB,WAAR,CAAoB,sBAApB;AACA,eAAO,EACL,GAAGjB,KADE;AAELJ,UAAAA,UAAU,EAAE,IAFP;AAGLC,UAAAA,KAAK,EAAEA,KAHF;AAILC,UAAAA,QAAQ,EAAEA;AAJL,SAAP;AAMD;;AACD,SAAKL,UAAU,CAACyB,iBAAhB;AAAmC;AACjCxB,QAAAA,OAAO,CAACyB,UAAR,CAAmB,oBAAnB;AACAR,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACA,eAAO,EAAE,GAAGZ,KAAL;AAAYJ,UAAAA,UAAU,EAAE,KAAxB;AAA+BC,UAAAA,KAAK,EAAE,EAAtC;AAA0CC,UAAAA,QAAQ,EAAE;AAApD,SAAP;AACD;;AACD;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA8BA,eAAeD,OAAf","sourcesContent":["import * as loginConst from \"../constrants/loginConst\";\nimport * as myToast from \"../../../Common/helper/toastHelper\";\n\nconst initialState = {\n  hasLogined: false,\n  email: \"\",\n  password: \"\",\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginConst.POST_LOGIN: {\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    case loginConst.POST_LOGIN_SUCCESS: {\n      const { data } = action.payload.data;\n      const username=  data.email.serializerSettings.taikhoankhachhangs.$values.username;\n      const password =  data.email.serializerSettings.taikhoankhachhangs.$values.password;\n      localStorage.setItem(\"hasLogined\", true);\n      localStorage.setItem(\"email\", username);\n      localStorage.setItem(\"password\", password);\n      console.log(\"dưlieu\"+JSON.stringify(action.payload));\n      myToast.toastSucces(\"Đăng nhập thành công\");\n      return {\n        ...state,\n        hasLogined: true,\n        email: email,\n        password: password,\n      };\n    }\n    case loginConst.POST_LOGIN_FAILED: {\n      myToast.toastError(\"Đăng nhập thất bại\");\n      localStorage.setItem(\"hasLogined\", false);\n      return { ...state, hasLogined: false, email: \"\", password: \"\" };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}