{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./reducers\";\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\n\nconst configureStore = () => {\n  const middleware = [thunk];\n  const enhancer = composeEnhancers(applyMiddleware(...middleware) // other store enhancers if any\n  );\n  const store = createStore(rootReducers, enhancer);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/khanhle/Documents/GitHub/framework_IS220.M11_6/lavender/src/Components/redux/configureStore.js"],"names":["applyMiddleware","compose","createStore","thunk","rootReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","middleware","enhancer","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AAEA,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,KAAkB,QAAlB,IACrBA,MAAM,CAACC,oCADc,GAErBD,MAAM,CAACC,oCAAP,CAA4C,CACxC;AADwC,CAA5C,CAFqB,GAIhBN,OAJT;;AAKA,MAAMO,cAAc,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAG,CACfN,KADe,CAAnB;AAGA,QAAMO,QAAQ,GAAGL,gBAAgB,CAC7BL,eAAe,CAAC,GAAGS,UAAJ,CADc,CAE7B;AAF6B,GAAjC;AAIA,QAAME,KAAK,GAAGT,WAAW,CAACE,YAAD,EAAeM,QAAf,CAAzB;AACA,SAAOC,KAAP;AACH,CAVD;;AAYA,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./reducers\";\n\nconst composeEnhancers = typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\nconst configureStore = () => {\n    const middleware = [\n        thunk\n    ];\n    const enhancer = composeEnhancers(\n        applyMiddleware(...middleware)\n        // other store enhancers if any\n    );\n    const store = createStore(rootReducers, enhancer);\n    return store;\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}